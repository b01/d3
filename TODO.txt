 - Implement profile request (DONE)
	- first time request
		- request the users profile from battle net (DONE).
		- store the battlenet profile in local database (DONE)
			- store the users IP, along with their battleNetID, and date the profile request was made. (DONE)
		- present the profile to the user (DONE)
 - Store each item requested:
	- implement a form that takes an item name
	- get the item data
		- check for the data in local database
			- if not, request the item data from battle net.
				- store the data in the database
				- pass the data stored back to the app
	- present the data to a user
 - Store each profile requested
 - Calculate damage formula in JS.
 - Calculate the following in JavaScript:
	crit chance,
	crit damage,
	dps
 - Setup basic Google analytics and webmaster tools.
 - Present the profile as UL list at resolutions higher than 800x600, otherwise as a selection list for anything below that.
 - Require battleNet ID for all web API request.
 - Get all the paths to the images and place them in the settings file.
 - Build the following classes
   - JsonSaver - save any JSON to the database, takes JSON string and Sql object in the constructor
   - ImageSaver - takes an iamge url and fileStream object and save a file to disk.
 - Turn display of an item into a class.
 - Only store items in the DB for an limited time, asjustable in the settings.
 - Email errors to site email address in settings.
 - Set a variable in the users session for errors that have been logged and do not send them again when the user refreshes.